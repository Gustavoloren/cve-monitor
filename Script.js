// script.js
window.onload = function() {
    const loadBtn = document.getElementById('loadVulnerabilitiesBtn'); // Botão para carregar dados
    const vulnerabilitiesContainer = document.getElementById('vulnerabilities-container');
    
    loadBtn.addEventListener('click', function() {
        vulnerabilitiesContainer.innerHTML = ''; // Limpa qualquer dado anterior
        loadBtn.disabled = true; // Desabilita o botão para evitar múltiplos cliques
        loadBtn.textContent = 'Carregando...'; // Altera o texto do botão para "Carregando"

        const apiUrl = 'https://cve.circl.lu/api/last/'; // URL para as vulnerabilidades mais recentes

        // Fazendo a requisição para a API
        fetch(apiUrl)
            .then(response => response.json())  // Converte a resposta para JSON
            .then(data => {
                loadBtn.disabled = false; // Habilita o botão novamente
                loadBtn.textContent = 'Carregar Vulnerabilidades'; // Restaura o texto original do botão

                if (data.length === 0) {
                    vulnerabilitiesContainer.innerHTML = '<p>Nenhuma vulnerabilidade encontrada.</p>';
                } else {
                    // Itera sobre o array de vulnerabilidades e cria os elementos HTML
                    data.forEach(vulnerability => {
                        const vulnerabilityDiv = document.createElement('div');
                        vulnerabilityDiv.classList.add('vulnerability-card');
                        vulnerabilityDiv.innerHTML = `
                            <h3>${vulnerability.id}</h3>
                            <p><strong>Descrição:</strong> ${vulnerability.summary || 'Descrição não disponível'}</p>
                            <p><strong>Data de Publicação:</strong> ${vulnerability.published || 'Data não disponível'}</p>
                            <p><strong>Severidade:</strong> ${vulnerability.cvss || 'Severidade não disponível'}</p>
                            <a href="https://cve.circl.lu/cve/${vulnerability.id}" target="_blank">Mais informações</a>
                        `;
                        vulnerabilitiesContainer.appendChild(vulnerabilityDiv);
                    });
                }
            })
            .catch(error => {
                console.error('Erro ao carregar dados:', error);
                loadBtn.disabled = false;
                loadBtn.textContent = 'Carregar Vulnerabilidades';
                vulnerabilitiesContainer.innerHTML = '<p>Erro ao carregar os dados. Tente novamente mais tarde.</p>';
            });
    });
};
